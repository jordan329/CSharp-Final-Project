DESCRIPTION: 
    this is an application that includes front and backend implementation for interfacing with
    google maps api. the backend talks to google places api about pizza places and passes info back to
    the frontend which displays information from the backend and makes get requests to it to update its view. 

DESCRIPTION FOR FRONTEND
Code located at: C:\Users\Jliebman\Desktop\C# Final Project\Frontend\Final\TestWPF

Double click the file Final.csproj at that location to open the code in Visual Studio

    This application is a c# WPF frontend to a dotnet core backend that I wrote (which I will also include).
    this application is for viewing information supplied by google places about pizza places.

    Simply type a zipcode into the textbox labeled "zip code" and press the "search zip" button,
    and the application will make a get request to the API (Because the API is run on AWS lambda 
    the backend expereiences what are called cold starts. This means the first call to the backend may
    take up to 10 seconds to return a response).

    The API sends back JSON which is used to populate the "pizza place list" listbox.
    Each item has a name and placeID property.

    Once you click on an option in the "pizza place list" listbox more details are displayed based on a second
    get request sent to the API which contains a placeID.

    That placeID is then used to send back more JSON which gives more details
    about the specific pizza place selected in the "pizza place list" listbox.

    These details are displayed in the numerous textboxes on the right of the view

    By clicking "Save Details" you can save the currently selected pizza places details in a .txt file.

    I relied heavily on Newtonsoft.Json, Newtonsoft.Json.Linq to traverse the JSON sent by my api and use
    the information sent to the application effectively.
    
    I also used the students/class list assignment xaml as a starting point for the application view.

DESCRIPTION FOR BACKEND
Code located at: C# Final Project\Backend\hackweek\api\dotnet-api-example\src\dotnet-api-example\Controllers

NOTE: this code is running on aws lambda, if you want to run this code locally you can but the frontend
is hitting this api on AWS lambda so running this code is not necessary 

    This API is a c# dotnet core backend for a few applications I've coded over the course of the semester.

    It has a PlacesController which uses a PlacesCaller class which uses System.Net.Http to send
    an asynchronous api call (get request with zipcode)to google places api
    and returns that JSON to an application that makes a request to my API.

    It has a DetailsController which uses a DetailsCaller classwhich uses System.Net.Http to send
    an asynchronous api call to google places api (get request with placeID)to google places api
    and returns that JSON to an application that makes a request to my API.


